---
import MainLayout from '@/layouts/MainLayout/MainLayout.astro';
import { ProjectTiledList } from '@/components/ProjectTiledList/ProjectTiledList';
import { ProjectTiledListItem } from '@/components/ProjectTiledList/ProjectTiledListItem';
import { getCollection } from 'astro:content';
import { Headline } from '@/components/Headline';
import { Divider } from '@/components/Divider';
import {
  type ProjectStatus,
  groupProjectsByStatus,
  projectStatusToLabel,
  projectStatuses,
  projectStatusOrder,
} from '@/shared/project.helpers';
import { groupChangelogsByProject } from '@/shared/changelog.helpers';
import { sortEntriesByPublishedAt } from '@/shared/collection.helpers';

const projectsByStatus = groupProjectsByStatus(await getCollection('projects'));

const statuses = projectStatuses
  .toSorted((a, b) => projectStatusOrder[a] - projectStatusOrder[b])
  //   astro check ignores optional chaining for some reason
  .filter(
    (status) =>
      status in projectsByStatus && projectsByStatus[status]!.length > 0,
  );

const changelogs = groupChangelogsByProject(
  sortEntriesByPublishedAt(await getCollection('changelogs')),
);
---

<MainLayout title="Projects">
  {
    statuses.map((status) => (
      <>
        <Divider isLeft={false}>
          <Headline>{projectStatusToLabel[status as ProjectStatus]}</Headline>
        </Divider>

        <ProjectTiledList>
          {projectsByStatus[status]!.map((project) => (
            <ProjectTiledListItem
              project={project}
              changelogs={changelogs[project.slug]!.slice(0, 2)}
            />
          ))}
        </ProjectTiledList>
      </>
    ))
  }
</MainLayout>
