---
import { getCollection } from 'astro:content';
import { MainLayout } from '@/layouts/MainLayout';
import { Divider } from '@/components/Divider';
import { Headline } from '@/components/Headline';
import { PostList } from '@/components/PostList';
import {
  sortEntriesByPublishedAt,
  PublishedAtFormat,
} from '@/shared/collection.helpers';
import { getUniqPostTags } from '@/shared/post.helpers';
import type { Post } from '@/shared/post.helpers';
import { PublishedAtFormat } from '@/shared/collection.helpers';

export async function getStaticPaths() {
  const entries = sortEntriesByPublishedAt(await getCollection('posts'));
  const tags = getUniqPostTags(entries);

  return await Promise.all(
    tags.map(async (tag) => {
      const posts = entries.filter(({ data }) => data.tags.includes(tag));

      return {
        params: { tag },
        props: { posts, tag },
      };
    }),
  );
}

interface Props {
  tag: string;
  posts: Post[];
}

const { posts, tag } = Astro.props;
---

<MainLayout title={`${tag} posts`}>
  <Divider isLeft={false}>
    <Headline>#{tag}</Headline>
  </Divider>
  <PostList>
    {
      posts.map((post) => (
        <PostList.Item
          post={post}
          publishedAtFormat={PublishedAtFormat.SHORT}
        />
      ))
    }
  </PostList>
</MainLayout>
