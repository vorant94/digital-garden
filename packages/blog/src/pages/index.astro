---
import { getCollection } from 'astro:content';
import { partition } from 'lodash-es';
import MainLayout from '@/layouts/MainLayout/MainLayout.astro';
import { Intro } from '@/components/Intro/Intro';
import { PostTiledList } from '@/components/PostTiledList/PostTiledList';
import { PostTiledListItem } from '@/components/PostTiledList/PostTiledListItem';
import { PinnedPosts } from '@/components/PinnedPosts';
import { Link } from '@/components/Link';
import { Carousel } from '@/components/Carousel';
import { Divider } from '@/components/Divider';
import { Headline } from '@/components/Headline';
import {
  sortEntriesByPublishedAt,
  isEntryDataWithCover,
} from '@/shared/collection.helpers';
import {
  getProjectFullPath,
  projectStatusToLabel,
  projectStatusToBadgeColor,
} from '@/shared/project.helpers';

const allPosts = sortEntriesByPublishedAt(await getCollection('posts'));
const [pinnedPosts, allNonPinnedPosts] = partition(
  allPosts,
  (entry) => entry.data.isPinned,
);

const recentNonPinnedPosts = allNonPinnedPosts.slice(0, 3);

const allProjects = await getCollection('projects');

const featuredProjects = allProjects
  .filter((project) => project.data.isFeatured)
  .slice(0, 3);
---

<MainLayout>
  <PinnedPosts posts={pinnedPosts} />

  <Intro />

  <Divider>
    <Headline>Featured Projects</Headline>
  </Divider>

  <Carousel>
    {
      featuredProjects.map((project) => {
        const { data } = project;

        return isEntryDataWithCover(data) ? (
          <Carousel.LinkSlide
            bgImageSrc={data.coverImage?.src}
            bgImageSrcDark={data.coverImageDark?.src}
            href={getProjectFullPath(project)}
            badgeLabel={projectStatusToLabel[data.status]}
            badgeColor={projectStatusToBadgeColor[data.status]}
            title={data.name}
            subTitle={data.slogan}
          />
        ) : (
          <Carousel.LinkSlide
            href={getProjectFullPath(project)}
            badgeLabel={projectStatusToLabel[data.status]}
            badgeColor={projectStatusToBadgeColor[data.status]}
            title={data.name}
            subTitle={data.slogan}
          />
        );
      })
    }
    <Carousel.EmptyLinkSlide href="/projects">See all</Carousel.EmptyLinkSlide>
  </Carousel>

  <Divider>
    <Headline>Recent Posts</Headline>
  </Divider>

  <PostTiledList>
    {recentNonPinnedPosts.map((post) => <PostTiledListItem post={post} />)}
  </PostTiledList>

  <Link
    className="self-center"
    href="posts">
    See all
  </Link>
</MainLayout>
