---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { getImage, Image } from 'astro:assets';
import { format } from 'date-fns';
import { DATE_FORMAT } from '../../shared/date-helpers';

interface Props {
  post: CollectionEntry<'posts'>;
}

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;

const { title, coverImage, description, publishedAt, tags } = post.data;
const coverImageSrc =
  coverImage &&
  (await getImage({ src: coverImage, format: coverImage.format })).src;

const { Content, remarkPluginFrontmatter } = await post.render();
---

<Layout
  title={title}
  image={coverImageSrc}>
  <article class="prose">
    <h1>{title}</h1>

    <div class="flex gap-2 items-center">
      <span class="text-sm text-gray-500">
        {format(publishedAt, DATE_FORMAT)}
      </span>
      <span class="text-sm text-gray-500">&#x2022;</span>
      <span class="text-sm text-gray-500">
        {remarkPluginFrontmatter.minutesRead}
      </span>

      <div class="flex-1"></div>

      <ul class="hidden lg:flex list-none m-0 p-0 gap-1">
        {
          tags.map((tag) => (
            <li class="border border-gray-300 rounded-full text-xs font-light text-gray-500 m-0 py-0 px-2">
              #{tag}
            </li>
          ))
        }
      </ul>
    </div>

    {
      coverImage && (
        <Image
          src={coverImage}
          alt=""
        />
      )
    }

    <p><em>{description}</em></p>

    <div>
      <Content />
    </div>
  </article>

  <script
    src="https://utteranc.es/client.js"
    repo="vorant94/vorant94.github.io"
    issue-term="og:title"
    label="comment"
    theme="github-light"
    crossorigin="anonymous"
    async
  ></script>
</Layout>
