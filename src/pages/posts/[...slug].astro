---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { getImage, Image } from 'astro:assets';
import Comments from '../../components/Comments.astro';
import { Post } from '../../shared/post';

interface Props {
  entry: CollectionEntry<'posts'>;
  post: Post;
}

export async function getStaticPaths() {
  const entries = await getCollection('posts');

  return await Promise.all(
    entries.map(async (entry) => {
      const post = await Post.fromEntry(entry);

      return {
        params: { slug: post.slug },
        props: { entry, post },
      };
    }),
  );
}

const { entry, post } = Astro.props;

const { coverImage, tags } = entry.data;
const { title, description, publishedAt } = post;

let coverImageSrc: string | undefined;
if (coverImage) {
  const image = await getImage({ src: coverImage, format: coverImage.format });
  coverImageSrc = image.src;
}

const { Content, remarkPluginFrontmatter } = await entry.render();
---

<Layout
  title={title}
  image={coverImageSrc}>
  <article class="prose">
    <h1>{title}</h1>

    <div class="flex gap-2 items-center">
      <span class="text-sm text-gray-500">
        {publishedAt}
      </span>
      <span class="text-sm text-gray-500">&#x2022;</span>
      <span class="text-sm text-gray-500">
        {remarkPluginFrontmatter.minutesRead}
      </span>

      <div class="flex-1"></div>

      <ul class="hidden lg:flex list-none m-0 p-0 gap-1">
        {
          tags.map((tag) => (
            <li class="border border-gray-300 rounded-full text-xs font-light text-gray-500 m-0 py-0 px-2">
              #{tag}
            </li>
          ))
        }
      </ul>
    </div>

    {
      coverImage && (
        <Image
          src={coverImage}
          alt=""
        />
      )
    }

    <p><em>{description}</em></p>

    <div>
      <Content />
    </div>
  </article>

  <Comments post={post} />
</Layout>
