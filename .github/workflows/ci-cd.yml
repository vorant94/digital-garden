name: CI/CD

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - run: npm run lint:ci

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - run: npm run build:client --workspace=@digital-garden/blog

      - uses: actions/upload-artifact@v4
        with:
          name: client-build-output
          path: packages/blog/public/client/
          retention-days: 30

      - run: npm run build:server --workspace=@digital-garden/blog

      - uses: actions/upload-artifact@v4
        with:
          name: server-build-output
          path: packages/blog/dist/
          retention-days: 30

  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - run: npm run test:coverage --workspace=@digital-garden/blog

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: packages/blog/coverage/
          retention-days: 30

  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - run: npm run build:client --workspace=@digital-garden/blog

      - run: npm run build:server --workspace=@digital-garden/blog

      - run: npm run e2e:setup --workspace=@digital-garden/blog

      - run: npm run e2e --workspace=@digital-garden/blog

      - uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./packages/blog/playwright-report/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    concurrency: deploy-group
    needs:
      - lint
      - test
      - e2e
      - build
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
